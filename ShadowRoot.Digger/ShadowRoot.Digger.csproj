<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Authors>Abhinav Minhas</Authors>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/abhinavminhas/shadowroot-digger</PackageProjectUrl>
    <RepositoryUrl>https://github.com/abhinavminhas/shadowroot-digger</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <Description>The solution combines the power of Document Query Selector API with Selenium to grab shadow root DOM trees and interact with any elements encapsulated within it.</Description>
    <PackageReleaseNotes>Minor Improvement
1. Wait and check returned object from Selenium javascript executor function is of type web element for IsShadowRootElementPresent() &amp; IsNestedShadowRootElementPresent() methods where older chromedriver versions return web element instead of dictionary object.
</PackageReleaseNotes>
    <PackageTags>Shadow DOM, Shadow Root, Selenium, Query Selector, DOM</PackageTags>
    <Version>1.0.2</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Selenium.WebDriver" Version="3.141.0" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
