#CI/MANUAL TRIGGER
name: Build

on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  DotNet_OS-VSVersion:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        vs-version: [ '16.5']
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Nuget Restore
      run: nuget restore ShadowRoot.Digger.sln -Verbosity quiet

    - name: Setup-MSBuild VS-Version (${{ matrix.vs-version }})
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: ${{ matrix.vs-version }}
      
    - name: Build
      id: build
      run: |
        msbuild ShadowRoot.Digger.sln /p:configuration=Release /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal /v:m
        
    - name: Setup-VSTest
      uses: darenm/Setup-VSTest@v1
      
    - name: Test
      run: vstest.console.exe ${{ github.workspace }}\ShadowRootDigger.NET.Tests\bin\Release\ShadowRootDigger.NET.Tests.dll /TestCaseFilter:"TestCategory=TESTS-DOTNETFRAMEWORK"
    
  
  DotNetCore_OS-Version:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macOS-latest ]
        dotnet-version: [ '3.1.x', '5.0.x' ]
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Dotnet Version (${{ matrix.dotnet-version }})
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Build
      run: dotnet build ShadowRootDigger.CORE.Tests/ShadowRootDigger.CORE.Tests.csproj --configuration Release
    
    - name: Test
      if: ${{ matrix.os == 'windows-latest' && matrix.dotnet-version == '3.1.x' }}
      run: dotnet test --no-build --verbosity normal --configuration Release --filter TestCategory=TESTS-DOTNETCORE
